<!--

    Licensed to JumpMind Inc under one or more contributor
    license agreements.  See the NOTICE file distributed
    with this work for additional information regarding
    copyright ownership.  JumpMind Inc licenses this file
    to you under the GNU General Public License, version 3.0 (GPLv3)
    (the 'License'); you may not use this file except in compliance
    with the License.

    You should have received a copy of the GNU General Public License,
    version 3.0 (GPLv3) along with this library; if not, see
    <http://www.gnu.org/licenses/>.

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<definitions>
	<component
		category='PROCESSOR'
		id='PGP Encrypt'
		inputMessageType='binary'
		inputOutputModelsMatch='false'
		outputMessageType='binary'
		resourceCategory='none'
	>
		<name>PGP Encrypt</name>
		<className>org.jumpmind.metl.core.runtime.component.PgpEncrypt</className>
		<keywords>encrypt,pgp</keywords>
		<description></description>
		<settings>
			<setting
				id='pgp.public.key.location'
				required='true'
				type='text'
			>
				<name>Public Key Location</name>
			</setting>
			<setting
				id='pgp.key.algorithm'
				required='true'
				type='choice'
			>
				<name>Key Algorithm</name>
				<defaultValue>AES_128</defaultValue>
				<choices>
					<!--
					    128-bit block sizes (recommended):
					-->
					<choice>AES_128</choice><!-- NIST approved -->
					<choice>AES_192</choice><!-- NIST approved -->
					<choice>AES_256</choice><!-- NIST approved -->
					<choice>CAMELLIA_128</choice>
					<choice>CAMELLIA_192</choice>
					<choice>CAMELLIA_256</choice>
					<choice>TWOFISH</choice>
					<!--
					    64-bit block sizes:
					    (By default, these are not available for encryption in
					    Metl. They are still available for decryption as long as
					    the underlying BC provider implements them. Individual
					    algorithms in this list MAY be re-enabled for encryption
					    on an as-needed basis.)
					-->
					<!--<choice>BLOWFISH</choice>--><!-- prefer Twofish -->
					<!--<choice>CAST5</choice>-->
					<!--<choice>SAFER</choice>-->
					<!--<choice>IDEA</choice>--><!-- PGP legacy interop only -->
					<!--<choice>TRIPLE_DES</choice>--><!-- SHOULD NOT USE: NIST deprecated 2018 -->
					<!--<choice>DES</choice>--><!-- DO NOT USE: NIST withdrawn 2005 -->
				</choices>
			</setting>
			<setting
				id='pgp.compression.algorithm'
				required='true'
				type='choice'
			>
				<name>Compression Algorithm</name>
				<defaultValue>ZIP</defaultValue>
				<choices>
					<choice>UNCOMPRESSED</choice>
					<choice>ZIP</choice>
					<choice>ZLIB</choice>
					<choice>BZIP2</choice>
				</choices>
			</setting>
			<setting
				id='pgp.compression.level'
				required='true'
				type='choice'
			>
				<name>Compression Level</name>
				<defaultValue>DEFAULT_COMPRESSION</defaultValue>
				<choices>
					<choice>DEFAULT_COMPRESSION</choice>
					<choice>NO_COMPRESSION</choice>
					<choice>BEST_SPEED</choice>
					<choice>BEST_COMPRESSION</choice>
				</choices>
			</setting>
			<setting
				id='pgp.armored'
				required='true'
				type='boolean'
			>
				<name>Armored</name>
				<defaultValue>false</defaultValue>
			</setting>
		</settings>
	</component>
	<!-- XXX: (5) -->
	<component
		category='PROCESSOR'
		id='PGP Decrypt'
		inputMessageType='binary'
		inputOutputModelsMatch='false'
		outputMessageType='binary'
		resourceCategory='none'
	>
		<name>PGP Decrypt</name>
		<className>org.jumpmind.metl.core.runtime.component.PgpDecrypt</className>
		<keywords>decrypt,pgp</keywords>
		<settings>
			<setting
				id='pgp.private.key.location'
				required='true'
				type='text'
			>
				<name>Private Key Location</name>
			</setting>
			<setting
				id='pgp.private.key.passphrase.location'
				required='true'
				type='text'
			>
				<name>Private Key Pass Phrase Location</name>
			</setting>
		</settings>
	</component>
</definitions>