import java.text.SimpleDateFormat
import java.util.Date

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
    	classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.6.1'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.18'
        classpath 'com.devsoap.plugin:gradle-vaadin-plugin:1.2.2'
        classpath 'com.smokejumperit.gradle.license:Gradle-License-Report:0.0.2'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'      
        classpath 'co.riiid:gradle-github-plugin:0.3.1'
    }
}

buildNumber = 'a'.equals(buildNumber) ?  ('a.' + new SimpleDateFormat("yyyyMMddHHmm").format(new Date())) : buildNumber
version = version + "." + buildNumber

ext {
    majorMinorVersion = version.substring(0, version.indexOf(".", version.indexOf(".")+ 1))
}    

apply plugin: 'co.riiid.gradle'

repositories {
    mavenCentral()
}

subprojects {
    task allDeps(type: DependencyReportTask) {}
}

configurations {
    sshAntTask
}

dependencies {
    sshAntTask 'org.apache.ant:ant-jsch:1.7.1', 'jsch:jsch:0.1.29'
}

github {
    owner = 'JumpMind'
    repo = 'metl'
    token = githubToken
    tagName = version
    targetCommitish = 'master'
    name = version
    prerelease = false
    body = "<a href='https://sourceforge.net/projects/metl/files/metl-${version}.war' rel='nofollow'><img alt='Download Metl' src='https://a.fsdn.com/con/app/sf-download-button'></a>"
}

task publishMetl {
    dependsOn githubRelease
	description = 'Publish software to SourceForge website'
    doLast {
        ant.taskdef(name: 'scp', classname: 'org.apache.tools.ant.taskdefs.optional.ssh.Scp',
        classpath: configurations.sshAntTask.asPath)
        def targetScpSite = "$sourceforgeUser:$sourceforgePassword@frs.sourceforge.net:/home/frs/project/metl";

        println "Publishing user-guide.html distribution to source forge"
        ant.scp(
            trust: 'true',
            verbose: 'true',
            localFile: '../metl-war/src/main/webapp/doc/html/user-guide.html',
            remoteTofile: "${targetScpSite}/user-guide-${version}.html")
 
        println "Publishing war distribution to source forge"
        ant.scp(
            trust: 'true',
            verbose: 'true',
            localFile: '../metl-war/build/libs/metl.war',
            remoteTofile: "${targetScpSite}/metl-${version}.war")
            
        println "Publishing metl doc documentation to jumpmind.com"
        ant.scp(
            trust: 'true',
            verbose: 'true',
            port: 2222,
            localFile: '../metl-war/src/main/webapp/doc/html/user-guide.html',
            remoteTofile: "$jumpmindUser:$jumpmindPassword@jumpmind.com:~/www/downloads/metl/doc/user-guide-${majorMinorVersion}.html")      
    }
    
   
}