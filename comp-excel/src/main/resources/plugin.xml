<!--

    Licensed to JumpMind Inc under one or more contributor
    license agreements.  See the NOTICE file distributed
    with this work for additional information regarding
    copyright ownership.  JumpMind Inc licenses this file
    to you under the GNU General Public License, version 3.0 (GPLv3)
    (the "License"); you may not use this file except in compliance
    with the License.

    You should have received a copy of the GNU General Public License,
    version 3.0 (GPLv3) along with this library; if not, see
    <http://www.gnu.org/licenses/>.

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<definitions>
  <component category='READER'
             id='2b1aa706-9ec7-11e6-80f5-76304dec7eb7'
             inputMessageType='text'
             inputOutputModelsMatch='false'
             outputMessageType='relational'
             resourceCategory='streamable'>
    <name>Excel File Reader</name>
    <className>org.jumpmind.metl.core.runtime.component.ExcelFileReader</className>
    <keywords>excel,file,files</keywords>
    <description></description>
    <settings>
      <setting id='run.when'
               required='false'
               type='choice'>
        <name>Run When</name>
        <defaultValue>PER UNIT OF WORK</defaultValue>
        <choices>
          <choice>PER UNIT OF WORK</choice>
          <choice>PER MESSAGE</choice>
        </choices>
      </setting>
      <setting id='get.file.name.from.message'
               required='false'
               type='boolean'>
        <name>Get File Name From Message</name>
        <defaultValue>false</defaultValue>
      </setting>
      <setting id='must.exist'
               required='false'
               type='boolean'>
        <name>Must Exist</name>
        <defaultValue>false</defaultValue>
      </setting>  
      <setting id='ignore.error'
               required='true'
               type='boolean'>
        <defaultValue>false</defaultValue>
        <name>Ignore on Formula Error</name>
      </setting>
      <setting id='relative.path'
               required='false'
               type='text'>
        <name>File Path</name>
      </setting>
      <setting id='rows.per.message'
               required='false'
               type='integer'>
        <name>Rows/Msg</name>
        <defaultValue>1000</defaultValue>
      </setting>
      <setting id='action.on.success'
               required='false'
               type='choice'>
        <name>Action on Flow Success</name>
        <defaultValue>NONE</defaultValue>
        <choices>
          <choice>None</choice>
          <choice>Archive</choice>
          <choice>Delete</choice>
        </choices>
      </setting>
      <setting id='archive.on.success.path'
               required='false'
               type='text'>
        <name>Archive On Success Path</name>
      </setting>
      <setting id='action.on.error'
               required='false'
               type='choice'>
        <name>Action on Error</name>
        <defaultValue>NONE</defaultValue>
        <choices>
          <choice>None</choice>
          <choice>Archive</choice>
          <choice>Delete</choice>
        </choices>
      </setting>
      <setting id='archive.on.error.path'
               required='false'
               type='text'>
        <name>Archive On Error Path</name>
      </setting>
      <setting id='header.lines.to.skip'
               required='false'
               type='integer'>
        <name>Header Lines to Skip</name>
      </setting>
      <setting id='control.message.on.eof'
               required='false'
               type='boolean'>
        <name>Send Control Message on EOF</name>
      </setting>
    </settings>
  </component>
  <component category='WRITER'
             id='Excel File Writer'
             inputMessageType='relational'
             inputOutputModelsMatch='false'
             outputMessageType='text'
             resourceCategory='streamable'>
    <name>Excel File Writer</name>
    <className>org.jumpmind.metl.core.runtime.component.ExcelFileWriter</className>
    <keywords>excel,file,files</keywords>
    <description></description>
    <settings>
      <setting id='excel.output.type'
               required='true'
               type='choice'>
        <name>Excel Output Type</name>
        <defaultValue>Microsoft Excel XML (.xlsx)</defaultValue>
        <choices>
          <choice>Microsoft Excel XML (.xlsx)</choice>
          <choice>Microsoft Excel (.xls)</choice>
        </choices>
      </setting>
      <setting id='must.exist' 
               required='true' 
               type='boolean'>
        <name>Must Exist</name>
        <defaultValue>false</defaultValue>
      </setting>
      <setting id='empty.file' 
               required='true' 
               type='boolean'>
        <name>Empty File On No Input</name>
        <defaultValue>true</defaultValue>
      </setting>
      <setting id='relative.path' 
               required='false' 
               type='text'>
        <name>Path and File</name>
      </setting>
      <setting id='sheet.name' 
               required='false' 
               type='text'>
        <name>Sheet Name</name>
      </setting>
      <setting id='include.header' 
               required='true' 
               type='boolean'>
        <name>Include Header Row</name>
        <defaultValue>false</defaultValue>
      </setting>
      <setting id='get.file.name.from.message'
               required='false'
               type='boolean'>
        <name>Get File Name From Message</name>
        <defaultValue>false</defaultValue>
      </setting>
      <setting id='filename.property' 
               required='false' 
               type='text'>
        <name>Param Name For Msg Based File Name</name>
      </setting>
    </settings>
  </component> 
</definitions>
